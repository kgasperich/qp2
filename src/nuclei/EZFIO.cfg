[nucl_num]
doc: Number of nuclei
type: integer
interface: ezfio, provider

[nucl_label]
doc:  Nuclear labels
type: character*(32)
size: (nuclei.nucl_num)
interface: ezfio, provider

[nucl_charge]
doc: Nuclear charges
type:double precision
size: (nuclei.nucl_num)
interface: ezfio, provider

[nucl_coord]
doc:  Nuclear coordinates in the format (:, {x,y,z})
type: double precision
size: (nuclei.nucl_num,3)
interface: ezfio

[io_nuclear_repulsion]
doc: Read/Write Nuclear Repulsion from/to disk [ Write | Read | None ]
type: Disk_access
interface: ezfio,provider,ocaml
default: None

[nuclear_repulsion]
doc: Nuclear repulsion (Computed automaticaly or Read in the |EZFIO|)
type:double precision
interface: ezfio

[is_periodic]
type: logical
doc: If true, the calculation uses periodic boundary conditions
interface: ezfio, provider, ocaml
default: false

[n_pts_charge]
type: integer
doc: Number of point charges to be added to the potential
interface: ezfio
default: 0

[pts_charge_z]
type: double precision
doc: Charge associated to each point charge
interface: ezfio
size: (nuclei.n_pts_charge)

[pts_charge_coord]
type: double precision
doc: Coordinate of each point charge.
interface: ezfio
size: (nuclei.n_pts_charge,3)

[point_charges]
type: logical
doc: If |true|, point charges (see nuclei/write_pt_charges.py) are added to the one-electron potential
interface: ezfio,provider,ocaml
default: False

